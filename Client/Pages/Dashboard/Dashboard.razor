@page "/dashboard"
@attribute [Authorize]
@layout NullLayout
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider Authentications

<div class="h-screen w-screen bg-[#faebd7]">
    <!-- Navbar Section -->
    <nav class="bg-gray-800">
        <div class="lg:px-[4%] sm:pl-2 max-w-9xl justify-between mr-0">
            <div class="relative flex h-[4.3rem] items-center justify-between">
                <!-- Content Navbar -->
                <div class="flex flex-1 items-center justify-center sm:items-stretch sm:justify-start">
                    <div class="sm:ml-6 sm:block">
                        <div class="flex space-x-4 gap-0">
                            <button class="text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-3 text-lg font-medium">
                                Todolist
                            </button>
                            <button class="text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-3 text-lg font-medium">
                                Weather
                            </button>
                            <button class="text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-3 text-lg font-medium">
                                Calendar
                            </button>
                            <button class="text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-3 text-lg font-medium">
                                Profile
                            </button>
                        </div>
                    </div>
                </div>
                <!-- Profile and notification navbar (left part) -->
                <div class=" flex items-center gap-1">

                    <button type="button" class="relative rounded-full bg-gray-800 p-1 text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800">
                        <span class="absolute -inset-1.5"></span>
                        <span class="sr-only">View notifications</span>
                        <svg class="h-7 w-7" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0" />
                        </svg>
                    </button>

                    <div class="relative ml-3">
                        <div>
                            <button type="button" class="relative flex rounded-full bg-gray-800 text-sm focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800" id="user-menu-button" aria-expanded="false" aria-haspopup="true">
                                <span class="absolute -inset-1.5"></span>
                                <span class="sr-only">Open user menu</span>
                                <img class="h-10 w-10 rounded-full" src="../images/profile-pic.webp" alt="profile-pic">
                            </button>
                        </div>
                    </div>

                    <a href="/">
                        <button class="ml-4 bg-red-500 hover:brightness-90 text-white p-2 rounded-md font-medium" 
                                @onclick:preventDefault="true"                    
                                @onclick="@(async () => await HandleSignOut())">
                            Sign Out
                        </button>
                    </a>

                </div>

            </div>
        </div>
    </nav>

    <div class="h-screen w-screen bg-[#faebd7] text-center">
        
        <div class="mb-3 bg-[#ffe4c4] p-6 text-3xl font-bold">
            ToDo List
        </div>
        
        <TodolistComponent/>
    </div>
</div>

@code
{
    private async Task HandleSignOut()
    {
        var jwt =  LocalStorage.RemoveItemAsync("jwt_final_exams");
        var userId = LocalStorage.RemoveItemAsync("userId_final_exams");
        await jwt;
        await userId;
        await Authentications.GetAuthenticationStateAsync();
        Navigation.NavigateTo("/");
    }
}
